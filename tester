#! /usr/bin/env python3

import sys
import time
import signal
import random
import logging
import argparse
import datetime

bools = [False, True]

def random_boolean():
  return random.choice(bools)

parser = argparse.ArgumentParser(description='Generate random staggered output')
parser.add_argument('duration', type=int, default=60, nargs='?', help='Number of seconds to run (default: 60)')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

start = datetime.datetime.now()
while (datetime.datetime.now() - start) < datetime.timedelta(seconds=args.duration):
  print(
    datetime.datetime.now().isoformat(),
    file=sys.stdout if random_boolean() else sys.stderr,
    end='\n' if random_boolean() else ' ',
  )
  time.sleep(random.randint(25, 1000) / 1000.0)
print()
