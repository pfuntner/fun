#! /usr/bin/env python

import re

def simplify(s):
  new_s = slashes_regexp.sub('/', s)
  new_s = dotslash_regexp.sub('', new_s)

  while True:
    newer_s = dotdotslash_regexp1.sub('/', new_s)
    if newer_s == new_s:
      break
    else:
      new_s = newer_s

  new_s = dotdotslash_regexp2.sub('', new_s)
  return new_s
  
def tryit(s):
  print '{s}\t{new_s}'.format(new_s=simplify(s), **locals())

slashes_regexp = re.compile('/{2,}')
dotslash_regexp = re.compile('(?:^|/)(\./)')
dotdotslash_regexp1 = re.compile('((?:/)[^/]+/\.\./)')
dotdotslash_regexp2 = re.compile('^(?:[^/]+)(/\.\./)')

tryit('foo')
tryit('./foo')
tryit('./foo/./bar')
tryit('./foo./bar')
tryit('foo/../bar')
tryit('foo../bar')
tryit('../foo')

tryit('a/b/c/../../foo')
