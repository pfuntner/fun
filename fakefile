#! /usr/bin/env python

import sys
import json
import logging
import argparse

class FakeFile(object):
  def __init__(self):
    self.buf = ''

  def write(self, msgs):
    lines = msgs.splitlines()
    if '\n' not in msgs:
      self.buf += msgs
    else:
      self.flush()
      for line in lines:
        log.info(line)

  def flush(self):
    if self.buf:
      log.info(self.buf)
      self.buf = ''

def see(expr):
  # global log
  value = eval(expr)
  log.info('{expr}: {value}'.format(**locals()))

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG)

parser = argparse.ArgumentParser()
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true')
parser.add_argument('files', metavar='file', nargs='*')

args = parser.parse_args()

fakefile = FakeFile()

parser.print_help(fakefile)

# see('dir(args)')
see('vars(args)')

json.dump(vars(args), fakefile)
fakefile.flush()
