#! /usr/bin/env python2

OrderedDict = dict
"""
OrderedDict([('id', 'jcp_autovnf'), ('vim-access', True), ('version', None), ('vim', {'username': 'jpfuntne', 'auth-url': 'http://10.225.202.173:5000/v2.0', 'key-pair': None, 'project': 'jpfuntne', 'api-version': 0, 'password': '********', 's_token_ref': 'vim-admin-creds', 'id': 'jcp_identity', 'tenant': 'jpfuntne'}), ('vnf-package', ['usp_6_x']), ('pkg_info', [{'validate-signature': False, 'cfgs': [{'source': 'http://192.168.100.28:5000/isos/jcp_autovnf_usp_6_x_staros', 'type': 'url', 'id': 'staros'}], 'name': None, 'checksum': None, 'shared': True, 'source-url': 'http://192.168.100.28:5000/isos/jcp_autovnf_usp_6_x', 'vdu-images': [], 'id': 'usp_6_x'}]), ('vim-orchd', None), ('vim-orch', None), ('vimd', None), ('vim-artifact', {'vnf-rack': ['jcp_vnf_rack'], 'vnf-racks': {'jcp_vnf_rack': {'id': 'jcp_vnf_rack', 'host_aggrs': {'jcp_host_aggr': ['tb2-compute-0.localdomain', 'tb2-compute-1.localdomain', 'tb2-compute-10.localdomain', 'tb2-compute-11.localdomain', 'tb2-compute-12.localdomain', 'tb2-compute-13.localdomain', 'tb2-compute-14.localdomain', 'tb2-compute-15.localdomain', 'tb2-compute-2.localdomain', 'tb2-compute-3.localdomain', 'tb2-compute-4.localdomain', 'tb2-compute-5.localdomain', 'tb2-compute-6.localdomain', 'tb2-compute-7.localdomain', 'tb2-compute-8.localdomain', 'tb2-compute-9.localdomain', 'tb2-osd-compute-0.localdomain', 'tb2-osd-compute-1.localdomain', 'tb2-osd-compute-2.localdomain']}}}, 'routers': {'main': {'externalnetwork': 'public', 'id': 'main'}}, 'router': ['main'], 'tenants': {}, 'id': 'jcp_artifact', 'tenant': []}), ('fmd', None), ('vld', [{'pre-created': True, 'type': 'management', 'id': 'mgmt', 'network': 'autoit-jcp_mgmt'}, {'pre-created': True, 'type': 'orchestration', 'id': 'orch', 'network': 'autoit-jcp_orch'}, {'pre-created': True, 'type': 'service', 'id': 'svc-1', 'network': 'service1'}, {'pre-created': True, 'type': 'service', 'id': 'svc-2', 'network': 'service2'}]), ('vnfd', None), ('vnf-instance', OrderedDict()), ('nsds', []), ('require', []), ('required', []), ('uas-instance', {})])
"""

def mask_value(data, filters):
  toks = data.split()
  tok_index = [idx+1 for idx, d in enumerate(toks) if d in filters]
  for idx in tok_index:
    toks[idx] = '******'
  return ' '.join(toks)

dep = OrderedDict([('id', 'jcp_autovnf'), ('vim-access', True), ('version', None), ('vim', {'username': 'jpfuntne', 'auth-url': 'http://10.225.202.173:5000/v2.0', 'key-pair': None, 'project': 'jpfuntne', 'api-version': 0, 'password': 'secret', 's_token_ref': 'vim-admin-creds', 'id': 'jcp_identity', 'tenant': 'jpfuntne'}), ('vnf-package', ['usp_6_x']), ('pkg_info', [{'validate-signature': False, 'cfgs': [{'source': 'http://192.168.100.28:5000/isos/jcp_autovnf_usp_6_x_staros', 'type': 'url', 'id': 'staros'}], 'name': None, 'checksum': None, 'shared': True, 'source-url': 'http://192.168.100.28:5000/isos/jcp_autovnf_usp_6_x', 'vdu-images': [], 'id': 'usp_6_x'}]), ('vim-orchd', None), ('vim-orch', None), ('vimd', None), ('vim-artifact', {'vnf-rack': ['jcp_vnf_rack'], 'vnf-racks': {'jcp_vnf_rack': {'id': 'jcp_vnf_rack', 'host_aggrs': {'jcp_host_aggr': ['tb2-compute-0.localdomain', 'tb2-compute-1.localdomain', 'tb2-compute-10.localdomain', 'tb2-compute-11.localdomain', 'tb2-compute-12.localdomain', 'tb2-compute-13.localdomain', 'tb2-compute-14.localdomain', 'tb2-compute-15.localdomain', 'tb2-compute-2.localdomain', 'tb2-compute-3.localdomain', 'tb2-compute-4.localdomain', 'tb2-compute-5.localdomain', 'tb2-compute-6.localdomain', 'tb2-compute-7.localdomain', 'tb2-compute-8.localdomain', 'tb2-compute-9.localdomain', 'tb2-osd-compute-0.localdomain', 'tb2-osd-compute-1.localdomain', 'tb2-osd-compute-2.localdomain']}}}, 'routers': {'main': {'externalnetwork': 'public', 'id': 'main'}}, 'router': ['main'], 'tenants': {}, 'id': 'jcp_artifact', 'tenant': []}), ('fmd', None), ('vld', [{'pre-created': True, 'type': 'management', 'id': 'mgmt', 'network': 'autoit-jcp_mgmt'}, {'pre-created': True, 'type': 'orchestration', 'id': 'orch', 'network': 'autoit-jcp_orch'}, {'pre-created': True, 'type': 'service', 'id': 'svc-1', 'network': 'service1'}, {'pre-created': True, 'type': 'service', 'id': 'svc-2', 'network': 'service2'}]), ('vnfd', None), ('vnf-instance', OrderedDict()), ('nsds', []), ('require', []), ('required', []), ('uas-instance', {})])

print 'clear', dep
print 'masked', mask_value(str(dep), ["'password':"])
