#! /usr/bin/env python2

"""
  Exploring the difference between `return None` and no `return` at all.

  I found https://stackoverflow.com/questions/15300550/return-return-none-and-no-return-at-all which talks about a third case I hadn't even considered: `return` without a value.

  Essentially, they behave the same and all have a return value of `None`.
"""

def see(label):
  value = eval(label)
  print '{label}:\t{value!r}'.format(**locals())

def fun(ret):
  if ret:
    return None

see('fun(True)')
see('fun(False)')
