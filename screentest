#! /usr/bin/env python

import re
import logging
import argparse
import subprocess

def run(cmd, ret_stdout=False):
  if isinstance(cmd, basestring):
    cmd = cmd.split()
  p = subprocess.Popen(cmd, stdout=subprocess.PIPE if ret_stdout else None, stderr=subprocess.PIPE)
  (stdout, stderr) = p.communicate()
  rc = p.wait()
  return stdout if ret_stdout else None

def to_int(s):
  ret = None
  match = to_int_regexp.search(s)
  if match:
    ret = int(match.group(1))
  return ret
  
def see(expr):
  value = eval(expr)
  log.debug('{expr}={value!r}'.format(**locals()))

to_int_regexp = re.compile('(\d+)')
  
parser = argparse.ArgumentParser(description='A sample use of ArgumentParser')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true',  help='Enable verbose debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

cols = to_int(run('tput cols', ret_stdout=True))
rows = to_int(run('tput lines', ret_stdout=True))

see('cols')
see('rows')
