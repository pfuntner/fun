#! /usr/bin/env python3

import sys
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description=sys.argv[0])
parser.add_argument('tokens', metavar='token', nargs='*', help='Zero or more tokens')
parser.add_argument('-b', '--binary', action='store_true', help='Open file in binary mode')
parser.add_argument('-f', '--filename', required=True, help='Path to file to create')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

data = ' '.join(args.tokens)
if args.binary:
  data = data.encode('utf-8')

with open(args.filename, 'w' + ('b' if args.binary else '')) as stream:
  stream.write(data)
